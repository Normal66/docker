FROM centos:7

MAINTAINER Constantin Sidorov <normal66@yandex.ru>

ENV TZ=Asia/Yekaterinburg
ENV LANG C.UTF-8

ENV SSL_VERSION "1.1.1l"
ENV NGINX_VERSION "1.20.1-1"
ENV NGINX_SHORT "1.20.1"

RUN yum install -y epel-release git curl gcc gcc-c++ gd-devel gettext GeoIP-devel libxslt-devel make perl perl-ExtUtils-Embed readline-devel unzip zlib-devel pcre-devel

WORKDIR /usr/src
# modules
RUN curl -SLO https://www.openssl.org/source/openssl-${SSL_VERSION}.tar.gz && tar xzvf openssl-${SSL_VERSION}.tar.gz \
        && cd openssl-${SSL_VERSION} \
        && ./config && make && make install && mkdir lib && cp ./*.{so,a,pc} ./lib \
        && echo "/usr/local/lib64" > /etc/ld.so.conf.d/openssl-${SSL_VERSION}.conf \
        && ldconfig -v \
        && export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64 \
        && echo "export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64" >> ~/.bashrc && source ~/.bashrc
RUN git clone https://github.com/eustas/ngx_brotli.git && cd ngx_brotli && git submodule update --init && git clone https://github.com/stnoonan/spnego-http-auth-nginx-module.git

# create group and user for nginx
RUN groupadd nginx && useradd --no-create-home nginx -g nginx

# nginx 
RUN curl -SLO https://nginx.org/download/nginx-${NGINX_SHORT}.tar.gz && tar -vzxf nginx-${NGINX_SHORT}.tar.gz

RUN cd nginx-${NGINX_SHORT} \
&& ./configure \
    --with-ld-opt="-Wl,-rpath,/usr/local/lib/" \
    --prefix=/etc/nginx \
    --sbin-path=/usr/sbin/nginx \
    --modules-path=/usr/lib/nginx/modules \
    --conf-path=/etc/nginx/nginx.conf \
    --error-log-path=/var/log/nginx/error.log \
    --http-log-path=/var/log/nginx/access.log \
    --pid-path=/var/run/nginx.pid \
    --lock-path=/var/run/nginx.lock \
    --http-client-body-temp-path=/var/cache/nginx/client_temp \
    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
    --user=nginx \
    --group=nginx \
    --with-http_ssl_module \
    --with-http_realip_module \
    --with-http_addition_module \
    --with-http_sub_module \
    --with-http_dav_module \
    --with-http_flv_module \
    --with-http_mp4_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_random_index_module \
    --with-http_secure_link_module \
    --with-http_stub_status_module \
    --with-http_auth_request_module \
    --with-http_xslt_module=dynamic \
    --with-http_image_filter_module=dynamic \
    --with-http_geoip_module \
    --with-http_perl_module=dynamic \
    --with-threads \
    --with-stream \
    --with-stream_ssl_module \
    --with-stream_geoip_module=dynamic \
    --with-http_slice_module \
    --with-mail \
    --with-mail_ssl_module \
    --with-file-aio \
    --with-http_v2_module \
    --with-pcre-jit \
    --add-module=/usr/src/ngx_brotli \
    --with-openssl=/usr/src/openssl-1.1.1l \
    --with-openssl-opt=enable-tls1_3 \
    && make -j2 && make install
# Add additional binaries into PATH for convenience
ENV PATH=$PATH:/usr/local/bin/:/usr/local/sbin/:/usr/bin/:/usr/sbin/
RUN mkdir -p /var/cache/nginx/client_temp && mkdir -p /etc/nginx/conf.d && mkdir -p /usr/share/nginx/html
# Copy nginx configuration files
COPY nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/default.conf
RUN echo "NGINX with brotli and tls1_3 on CentOS 7 inside Docker" > /usr/share/nginx/html/index.html
RUN rm -rf /usr/src/*.tar.gz && ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log
# allow port(s)
EXPOSE 22 80 443
#
#STOPSIGNAL SIGTERM
# This is the default CMD used by nginx:1.9.2 image
CMD ["nginx", "-g", "daemon off;"]
